{"version":3,"sources":["components/Search.js","components/AddrList.js","modules/Search.js","containers/Search.js","App.js","reportWebVitals.js","modules/index.js","index.js"],"names":["Search","onSearch","searchLink","process","useState","text","setText","onSubmit","e","preventDefault","a","axios","get","response","jusos","data","results","juso","console","log","searchAddr","className","name","placeholder","onChange","target","value","vlue","onClick","React","memo","ListItem","list","map","item","roadAddr","jibunAddr","engAddr","zipNo","bdMgtSn","AddrList","length","SET_SEARCH_RESULTS","initialState","SearchContainer","addrlist","useSelector","state","search","dispatch","useDispatch","type","setResults","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAKA,SAASA,EAAT,GAA+B,IAAbC,EAAY,EAAZA,SAEVC,EAAU,gHADDC,8CACC,aAFY,EAGJC,mBAAS,IAHL,mBAGrBC,EAHqB,KAGfC,EAHe,KAMtBC,EAAW,SAACC,GAChBA,EAAEC,iBACc,uCAAG,8BAAAC,EAAA,+EAEQC,IAAMC,IAAIV,EAAaG,GAF/B,OAETQ,EAFS,OAGTC,EAAQD,EAASE,KAAKC,QAAQC,MAAQ,GAC5ChB,EAASa,GACTI,QAAQC,IAAIN,EAASE,KAAKC,SALX,gDAOfE,QAAQC,IAAI,WACZD,QAAQC,IAAR,MARe,yDAAH,oDAWhBC,IAGF,OACE,qCACE,wEACA,sBAAMb,SAAUA,EAAhB,SACE,sBAAKc,UAAU,SAAf,UACE,uBAAOC,KAAK,OAAOC,YAAY,2BAAOC,SAtB7B,SAAChB,GAAD,OAAOF,EAAQE,EAAEiB,OAAOC,QAsByBC,KAAMtB,IAChE,cAAC,IAAD,CAAUgB,UAAU,OAAOO,QAASrB,YAO/BsB,UAAMC,KAAK9B,G,OCrCpB+B,G,MAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClB,OACE,mCACGA,EAAKC,KAAI,SAACC,GAAD,OACR,+BACE,+BACE,qBAAKb,UAAU,OAAf,SAAuBa,EAAKC,WAC5B,qBAAKd,UAAU,QAAf,SAAwBa,EAAKE,eAE/B,6BAAKF,EAAKG,UACV,6BAAKH,EAAKI,UANHJ,EAAKK,QAAU,WAahC,SAASC,EAAT,GAA6B,IAATR,EAAQ,EAARA,KAClB,OACE,mCACE,qBAAKX,UAAU,YAAf,SACIW,EAAKS,OAGL,wBAAOpB,UAAU,WAAjB,UACE,gCACE,+BACE,2DACA,2DACA,+DAGJ,gCACE,cAAC,EAAD,CAAUW,KAAMA,SAXpB,gGAoBKH,UAAMC,KAAKU,GC7CpBE,EAAqB,qBASrBC,EAAe,CACnB5B,KAAM,ICUO6B,MAdf,WACE,IAAMC,EAAWC,aAAY,SAACC,GAAD,OAAWA,EAAMC,OAAOjC,QAC/CkC,EAAWC,cAIjB,OACE,qCACE,cAAC,EAAD,CAAQjD,SAJK,SAACc,GAAD,OAAUkC,EDPH,SAAClC,GAAD,MAAW,CACnCoC,KAAMT,EACN3B,QCKoCqC,CAAWrC,OAK3C,cAAC,EAAD,CAAUiB,KAAMa,QCJPQ,MARf,WACE,OACE,mCACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCACQ,EAJKC,YAAgB,CAClChB,OJSa,WAA+C,IAA/BD,EAA8B,uDAAtBJ,EAAcsB,EAAQ,uCAC3D,OAAQA,EAAOd,MACb,KAAKT,EACH,MAAO,CACL3B,KAAMkD,EAAOlD,MAEjB,QACE,OAAOgC,MKXPmB,EAAQC,YAAYJ,GAE1BK,IAASC,OACP,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SACE,cAAC,IAAMI,WAAP,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BlB,M","file":"static/js/main.00b48331.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { MdSearch } from \"react-icons/md\";\nimport \"./Search.scss\";\n\nfunction Search({ onSearch }) {\n  const apikey = process.env.REACT_APP_ADDR_KEY;\n  const searchLink = `https://www.juso.go.kr/addrlink/addrLinkApi.do?resultType=json&currentPage=1&countPerPage=10&confmKey=${apikey}&keyword=`;\n  const [text, setText] = useState(\"\");\n\n  const onChange = (e) => setText(e.target.value);\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const searchAddr = async () => {\n      try {\n        const response = await axios.get(searchLink + text);\n        const jusos = response.data.results.juso || [];\n        onSearch(jusos);\n        console.log(response.data.results);\n      } catch (e) {\n        console.log(\"@@ERROR\");\n        console.log(e);\n      }\n    };\n    searchAddr();\n  };\n\n  return (\n    <>\n      <h1>영문 주소 변환</h1>\n      <form onSubmit={onSubmit}>\n        <div className=\"Search\">\n          <input name=\"text\" placeholder=\"주소입력\" onChange={onChange} vlue={text} />\n          <MdSearch className=\"icon\" onClick={onSubmit} />\n        </div>\n      </form>\n    </>\n  );\n}\n\nexport default React.memo(Search);\n","import React from \"react\";\nimport \"./AddrList.scss\";\n\nconst ListItem = ({ list }) => {\n  return (\n    <>\n      {list.map((item) => (\n        <tr key={item.bdMgtSn + \"\"}>\n          <td>\n            <div className=\"road\">{item.roadAddr}</div>\n            <div className=\"jibun\">{item.jibunAddr}</div>\n          </td>\n          <td>{item.engAddr}</td>\n          <td>{item.zipNo}</td>\n        </tr>\n      ))}\n    </>\n  );\n};\n\nfunction AddrList({ list }) {\n  return (\n    <>\n      <div className=\"tableWrap\">\n        {!list.length ? (\n          <div>검색 결과가 없습니다.</div>\n        ) : (\n          <table className=\"addrlink\">\n            <thead>\n              <tr>\n                <th>한글 주소</th>\n                <th>영문 주소</th>\n                <th>우편번호</th>\n              </tr>\n            </thead>\n            <tbody>\n              <ListItem list={list} />\n            </tbody>\n          </table>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default React.memo(AddrList);\n","const SET_SEARCH_RESULTS = \"SET_SEARCH_RESULTS\";\n\n// 액션 생성함수\nexport const setResults = (data) => ({\n  type: SET_SEARCH_RESULTS,\n  data,\n});\n\n// 초기상태\nconst initialState = {\n  data: [],\n};\n// 리듀서\nexport default function search(state = initialState, action) {\n  switch (action.type) {\n    case SET_SEARCH_RESULTS:\n      return {\n        data: action.data,\n      };\n    default:\n      return state;\n  }\n}\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AddrList from \"../components/AddrList\";\nimport Search from \"../components/Search\";\nimport { setResults } from \"../modules/Search\";\n\nfunction SearchContainer() {\n  const addrlist = useSelector((state) => state.search.data);\n  const dispatch = useDispatch();\n\n  const onSearch = (data) => dispatch(setResults(data));\n\n  return (\n    <>\n      <Search onSearch={onSearch} />\n      <AddrList list={addrlist} />\n    </>\n  );\n}\n\nexport default SearchContainer;\n","import Search from \"./components/Search\";\nimport SearchContainer from \"./containers/Search\";\n\nfunction App() {\n  return (\n    <>\n      <SearchContainer />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\nimport search from \"./Search\";\n\nconst rootReducer = combineReducers({\n  search,\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./modules\";\n\nconst store = createStore(rootReducer); // 스토어를 만듭니다.\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}